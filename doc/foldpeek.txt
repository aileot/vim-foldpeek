*foldpeek.txt*

Version: 1.1.0
Author: kaile256 <kaile256acc at gmail.com>
License: MIT license

==============================================================================
CONTENTS						  *foldpeek-contents*

Introduction			|foldpeek-introduction|
Usage				|foldpeek-usage|
	function			|foldpeek-function|
	variable			|foldpeek-variable|

==============================================================================
INTRODUCTION						     *foldpeek-intro*
	custom your foldtext simpler

Latest version:
https://github.com/kaile256/vim-foldpeek

==============================================================================
USAGE							      *foldpeek-usage*

Just install this repository under plugin/ or use your favorite
plugin-manager.

------------------------------------------------------------------------------
FUNCTION						   *foldpeek-function*

foldpeek#text()					      *foldpeek-foldpeek#text*
	Unless g:foldpeek#local_only = 1, this function is set in &foldtext.
	For local use, add
>
	setlocal foldtext=foldpeek#text()
<
	in your vimrc with |autocmd| or under ftplugin/foo.vim.

------------------------------------------------------------------------------
VARIABLES						  *foldpeek-variable*

g:foldpeek#local_only				      *g:foldpeek#local_only*
	(default: 0)
	|foldpeek#text()| won't be set in &foldtext unless
>
	setlocal foldtext=foldpeek#text()
<
	in your vimrc or in commandline.

g:foldpeek#maxwidth					*g:foldpeek#maxwidth*
	(default: 78)
	To disable, set `-1`.

g:foldpeek#auto_foldcolumn			 *g:foldpeek#auto_foldcolumn*
	(default: 0)
	If not `0`, increase |&foldcolumn| as the highest v:foldlevel of current
	buffer.

g:foldpeek#skip_patterns			   *g:foldpeek#skip_patterns*
b:foldpeek_skip_patterns			   *b:foldpeek_skip_patterns*
	(default: ['^[\-=/{!* ]*$'])
	Set in |List|.
	This value will be compared to the folded lines in regexp match. Check
	the doc by `:help /[]`

	Note: <Tab> and the pair of foldmarker with &commentstring (without `%s`)
	is regarded as whitespaces on the comparison.

g:foldpeek#head						    *g:foldpeek#head*
b:foldpeek_head						    *b:foldpeek_head*
	(default: {1: "v:foldlevel > 1 ? v:foldlevel .') ' : v:folddashes "})
	Set in |Dictionary| for head of folded text.
	The keys should be a number which represents lnum of the peeked line as
	the lnum of v:foldstart is `1`. The value of the highest key under the
	peeked lnum will be evaluated.
	You can set it buffer-locally by |b:foldpeek_head|. If you dislike the
	change of indent in folded text, add
>
		let g:foldpeek#head = ''
<
	in your vimrc and keep it empty.

g:foldpeek#tail						    *g:foldpeek#tail*
b:foldpeek_tail						    *b:foldpeek_tail*
	(default: {
	\ 1: "' ['. (v:foldend - v:foldstart + 1) .']'",
	\ 2: "' [%lnum%/'. (v:foldend - v:foldstart + 1) .']'",
	\ })
	Set in |Dictionary| for tail of folded text.
	You can set it buffer-locally by |b:foldpeek_tail|. See more detail at
	|b:foldpeek_head|.

==============================================================================
vim:tw=78:ts=8:sts=8:sw=8:ft=help:norl:noet:fen
