*foldpeek.txt*

Version: 1.3.0
Author: kaile256 <kaile256acc at gmail.com>
License: MIT license

==============================================================================
CONTENTS						    *foldpeek-contents*

Introduction			|foldpeek-introduction|
Overview			|foldpeek-overview|
Interface			|foldpeek-interface|
	Function			|foldpeek-function|
	Variable			|foldpeek-variable|
Example				|foldpeek-example|
	Example-Variable		|foldpeek-example-variable|
Compatibility			|foldpeek-compatibility|

==============================================================================
INTRODUCTION						       *foldpeek-intro*

	Peek in folds!

	*foldpeek* lets you get more informations at foldtext.
	You can get git-diff status in each folds with another plugin.

Latest version:
https://github.com/kaile256/vim-foldpeek

==============================================================================
OVERVIEW						    *foldpeek-overview*

|foldpeek| provides some functions and variables to configure. Read the
details in |foldpeek-interface|.
The functions:
------------------------------------------------------------------------------
FUNCTION					   *foldpeek-overview-function*

| `foldpeek#text()`          | the main function for 'foldtext'   |
| `foldpeek#head()`          | used in |g:foldpeek#head| as default |
| `foldpeek#tail()`          | used in |g:foldpeek#tail| as default |
| `foldpeek#hunk_info()`     | see |foldpeek-overview-git|          |
| `foldpeek#has_any_hunks()` | see |foldpeek-overview-git|          |

------------------------------------------------------------------------------
VARIABLE					   *foldpeek-overview-variable*

| |g:foldpeek#indent_with_head|              | modify fold head as indent        |
| |g:foldpeek#head|                          | decorate head of folded line      |
| |g:foldpeek#tail|                          | decorate tail of folded line      |

| |g:foldpeek#disabled_whiteout_styles|      | disable the styles in list |
| |g:foldpeek#whiteout_patterns_left|        | (omitted)                  |
| |g:foldpeek#whiteout_patterns_omit|        | (omitted)                  |
| |g:foldpeek#whiteout_patterns_fill|        | (omitted)                  |
| |g:foldpeek#whiteout_patterns_substitute|  | (omitted)                  |
| |g:foldpeek#whiteout_style_for_foldmarker| | (omitted)                  |

| |g:foldpeek#hunk_sign|   | sign at a fold including any hunks |
| |g:foldpeek#hunk_format| | format of hunk info                |

Most of the variables have buffer-local ones respectively like
|b:foldpeek_skip_patterns|. Follow the tags for more detail.

------------------------------------------------------------------------------
FEATURE						    *foldpeek-overview-feature*

whiteout					   *foldpeek-overview-whiteout*
	Currently, |foldpeek| supports the styles:

	left		only show matched patterns.
	omit		omit matched patterns.
	fill		replace with whitespaces as matched patterns length.
	substitute	subsititue as listed.
	subloop		subsititue as listed.

	For more detail, respectively follow the tags:

	|g:foldpeek#whiteout_patterns_left|,
	|g:foldpeek#whiteout_patterns_omit|,
	|g:foldpeek#whiteout_patterns_fill|,
	|g:foldpeek#whiteout_patterns_substitute|,

git							*foldpeek-overview-git*
	Watch the changes in each folds.
	|foldpeek| only provides |foldpeek#git#status()|.

	`foldpeek#hunk_info()`
	`foldpeek#has_any_hunks()`

	Related variables:

	|g:foldpeek#hunk_sign|
	|g:foldpeek#hunk_format|

	The feature requires another plugin, either
	"https://github.com/neoclide/coc.nvim" with "coc-git" or
	"https://github.com/airblade/vim-gitgutter".

==============================================================================
INTERFACE						   *foldpeek-interface*

------------------------------------------------------------------------------
FUNCTION						    *foldpeek-function*

foldpeek#text						       *foldpeek#text()*
	Unless |g:foldpeek#local_only| is set to 1, this function will be set in
	'foldtext'. For local use, add
>
	setlocal foldtext=foldpeek#text()
<
	in your vimrc with |autocmd| or under ftplugin/foo.vim.

foldpeek#default#head()				       *foldpeek#default#head()*
foldpeek#default#tail() 		     	       *foldpeek#default#tail()*
	The default functions for |g:foldpeek#head| and |g:foldpeek#tail|.
	You can overwrite them with {expr} like
>
	let g:foldpeek#head = 'FoldpeekHead()'
	let g:foldpeek#tail = 'FoldpeekTail()'
<
foldpeek#hunk_info()				        *foldpeek#hunk_info()*
	Returns in |Dictionary|. The keys are "Added", "Modified" and "Removed".

	Note: The feature depends on another plugin; see |foldpeek-overview-git|.

foldpeek#has_any_hunks()			    *foldpeek#has_any_hunks()*
	Returns |TRUE| if a fold has any changes. Thus, it makes easier to change
	foldtext format. It should be used in functions related to fold.

	Note: The feature depends on another plugin; see |foldpeek-overview-git|.

------------------------------------------------------------------------------
VARIABLE						    *foldpeek-variable*

g:foldpeek#local_only					*g:foldpeek#local_only*
	(default: 0)
	If not 0, |foldpeek#text()| won't be set in &foldtext unless
>
	setlocal foldtext=foldpeek#text()
<
	in your vimrc or in commandline.

g:foldpeek#maxwidth					  *g:foldpeek#maxwidth*
	(default: "&textwidth > 0 ? &tw : 79")
	Set in |Number| or |String|. The value will be evaluated.
	|foldpeek#text()| will keep foldtext, including head and tail, within
	the column as is evaluated.

g:foldpeek#auto_foldcolumn			   *g:foldpeek#auto_foldcolumn*
	(default: 0)
	If not `0`, increase |&foldcolumn| as the highest v:foldlevel of current
	buffer.

g:foldpeek#skip#patterns			     *g:foldpeek#skip#patterns*
b:foldpeek_skip_patterns			     *b:foldpeek_skip_patterns*
	(default: ['^[>#\-=/{!* \t]*$'])
	Set in |List|.
	This value will be compared to the folded lines in regexp match. Check
	the doc by `:help /[]`

	Note:
	<Tab> and pair out of 'foldmarker' with &commentstring (without `%s`)
	close to those is regarded as whitespaces on the comparison.

g:foldpeek#skip_patterns			     *g:foldpeek#skip_patterns*
	(Deprecated)

g:foldpeek#skip#override_patterns	    *g:foldpeek#skip#override_patterns*
b:foldpeek_skip_override_patterns	    *b:foldpeek_skip_override_patterns*

g:foldpeek#indent_with_head			  *g:foldpeek#indent_with_head*
b:foldpeek_indent_with_head			  *b:foldpeek_indent_with_head*
	(default: 0)
	Set in |Number|.
	If 0, head of foldtext which is returned by |g:foldpeek#head| or
	|b:foldpeek_head| will be also indented, i.e., head will be located at
	the first non-blank character where you get by "^" in normal mode;
	otherwise, head will be shown at the first character of the line where
	you get by "0" in normal mode.

g:foldpeek#head						      *g:foldpeek#head*
b:foldpeek_head						      *b:foldpeek_head*
	(default: "foldpeek#default#head()"
	Set in |String|. The value will be evaluated if possible.
	Replace heads of foldtext with the value.
	If you dislike the change of indent in folded text, add
>
		let g:foldpeek#head = ''
<
	in your vimrc and keep it empty.

g:foldpeek#tail						      *g:foldpeek#tail*
b:foldpeek_tail						      *b:foldpeek_tail*
	(default: "foldpeek#default#tail()"
	Set in |String|. The value will be evaluated if possible.
	Replace tails of foldtext with the value, at the column decided by
	|g:foldpeek#maxwidth|.

g:foldpeek#table					     *g:foldpeek#table*
	(Deprecated)

g:foldpeek#disable_whiteout			  *g:foldpeek#disable_whiteout*
b:foldpeek_disable_whiteout			  *b:foldpeek_disable_whiteout*
	(Deprecated)

g:foldpeek#whiteout#patterns			 *g:foldpeek#whiteout#patterns*
b:foldpeek_whiteout_patterns			 *b:foldpeek_whiteout_patterns*
	(default: {"substitute": [
		\   ['{\s*$', '{...}', ''],
		\   ['[\s*$', '[...]', ''],
		\   ['(\s*$', '(...)', ''],
		\   ]
		\ })
	Set in |Dictionary|. The possible keys are

	match		expects |List| of |String|. Only show matched patterns,
			ignore the others.

	omit		expects |List| of |String|. Omit matched patterns.

	fill		expects |List| of |String|. Similar to "omit", but replace
			with whitespaces as matched length.

	substitute	expects |List| of |List|. Subsititute as given lists. The
			format of value is [{pat}, {sub}, {flags}].

	subloop		expects |List| of |List|. Similar to "substitute", but
			repeat to substitute while text has given pattern. It's
			useful for patterns with atoms like "*" and "\{-}",
			which are useless with g-flag. The format is the same
			as "substitute".

	See |foldpeek-example-foldpeek#whiteout|.

g:foldpeek#whiteout_patterns_omit	    *g:foldpeek#whiteout_patterns_omit*
g:foldpeek#whiteout_patterns_fill	    *g:foldpeek#whiteout_patterns_fill*
	(Deprecated)
	Use |g:foldpeek#whiteout#patterns| instead.

				     *g:foldpeek#whiteout#style_for_foldmarker*
				     *b:foldpeek_whiteout_style_for_foldmarker*
g:foldpeek#whiteout#style_for_foldmarker
b:foldpeek_whiteout_style_for_foldmarker
	(default: "omit")
	(available: "omit", "fill")
	Set in |String|.
	Decide the style of white-out for pair out of 'foldmarker'. This
	variable is especially for such users who use foldmarkers at head
	of line like
>
	"}}}1 foo bar
	let foobar = 1
<
	Unless explicitly set "fill" in this variable, it is always set to
	"omit"; the behavior is the same as |g:foldpeek#whiteout_patterns_omit|
	and so on.

				     *g:foldpeek#whiteout_style_for_foldmarker*
g:foldpeek#whiteout_style_for_foldmarker
	(Deprecated)
	Use |g:foldpeek#whiteout#style_for_foldmarker| instead.

g:foldpeek#cache#disable			      *g:foldpeek#cache#disable*
	(Default: 0)
	If not 0, |foldpeek| always processes foldtext at every folded lines as
	Vim/Neovim demands.

==============================================================================
EXAMPLE							      *foldpeek-example*

whiteout					   *foldpeek-feature-whiteout*
	Currently, vim-foldpeek supports the styles:

	left		only show matched patterns.
	omit		omit matched patterns.
	fill		replace with whitespaces as matched patterns length.
	substitute	subsititue as listed.

	For more detail, see g:foldpeek#whiteout_patterns_foo respectively.

==============================================================================
EXAMPLE							    *foldpeek-example*

------------------------------------------------------------------------------
EXAMPLE-VARIABLE				   *foldpeek-example-variable*

foldpeek#whiteout			  *foldpeek-example-foldpeek#whiteout*
	(reference: |g:foldpeek#skip_patterns|,
	|g:foldpeek#whiteout_patterns_omit|,
	|g:foldpeek#whiteout_patterns_fill|,
	|g:foldpeek#whiteout_style_for_foldmarker|)

In your vimrc,
>
	let g:foldpeek#skip_patterns = [
	      \ '^[\-=/{!* \t]*$',
	      \ "\[\[plugins]]",
	      \ ]

	let g:foldpeek#whiteout_patterns_omit = [
	      \ 'repo = ',
	      \ ]

<
Say, in your toml as a style of dein (a vim's plugin manager) and set
'foldmethod' to "marker", you would write like below:
>
	[[plugin]] #{{{1
	repo = 'kaile256/vim-foldpeek'

	#[[plugin]] #{{{1
	#repo = 'foo/bar'
<
while the whiteout_patterns contains "repo = " in
|g:foldpeek#whiteout_patterns_fill|, you will see as below:
>
	-       'kaile256/vim-foldpeek'                                  [2/3]
	-#       'foo/bar'                                               [2/2]
<
in |g:foldpeek#whiteout_patterns_omit| instead, you will see as below:
>
	-'kaile256/vim-foldpeek'                                         [2/3]
	-#'foo/bar'                                                      [2/2]
<
===============================================================================
COMPATIBILITY					        *foldpeek-compatibility*

Deprecated feature will be all removed in the next update after deprecation
notice.

2020.05.02
* Deprecated: foldpeek#head() and foldpeek#tail(); please use
  foldpeek#default#head() and foldpeek#default#tail() instead.
* Deprecated: g:foldpeek#whiteout_patterns_omit/fill and
  b:foldpeek_whiteout_patterns_fill/omit will be removed; please use
  g:foldpeek#whiteout#patterns and b:foldpeek_whiteout_patterns instead.
  That's because easier for users to reset variables without unintentional
  behaviors.
* Deprecated: g:foldpeek#whiteout_style_for_foldmarker; please use
  g:foldpeek#whiteout#style_for_foldmarker instead. The change is only for
  unity, sorry.

2020.04.28
* Deprecated: g:foldpeek#head/tail and b:foldpeek_head/tail in Dictionary.
  |foldpeek| will stop to support them in Dictionary; please use them in
  String.
* Deprecated: g:foldpeek#table will be removed; please override or define
  functions like foldpeek#head() or foldpeek#tail() instead.

2020.04.26
* Remove g:foldpeek#disable_whiteout and b:foldpeek_disable_whiteout; please
  use g:foldpeek#disabled_whiteout_styles and
  b:foldpeek_disabled_whiteout_styles instead.

==============================================================================
vim:ft=help:tw=78:ts=8:sts=8:sw=8:noet:norl:fen
